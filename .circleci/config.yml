version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - node/install-packages:
           cache-path: ~/project/node_modules
           override-ci-command: npm install
      - run: 
          name: Compile Db-Utils
          command: npm run compile
      - run: echo $CIRCLE_SHA1
      - run: echo "$CIRCLE_SHA1" > _tmp_file
      - save_cache:
          paths:
            - ~/project
          key: build-{{ checksum "_tmp_file" }}
  test:
    docker:
      - image: circleci/node:latest
      - image: circleci/postgres:9.6.2-alpine
        environment:
          PGHOST: 127.0.0.1
          POSTGRES_USER: dev
    steps:
      - run: echo $CIRCLE_SHA1
      - run: echo "$CIRCLE_SHA1" > _tmp_file
      - restore_cache:
          keys:
            - build-{{ checksum "_tmp_file" }}
      - run: 
          name: Install Postgresql Cli
          command: sudo apt-get update && sudo apt-get install postgresql
      - run:
          name: Wait for Postgresql to Initialize
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: 
          name: Create and Populate dvdrental Database
          command: createdb -U dev -h localhost dvdrental && psql -U dev -d dvdrental -f src/test/sample-db/dvdrental/restore.sql -h localhost
      - run:
          name: Run tests with JUnit as reporter
          command: npm run test:ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/
      - store_artifacts:
          path: ./reports/junit
  publish:
    docker: 
      - image: circleci/node:latest
    steps:
      - run: echo $CIRCLE_SHA1
      - run: echo "$CIRCLE_SHA1" > _tmp_file
      - restore_cache:
          keys:
            - build-{{ checksum "_tmp_file" }}
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/project/.npmrc
      - run:
          name: Publish package
          command: npm publish --access public
orbs:
  node: circleci/node@3.0.0
workflows:
  dbutils-test:
    jobs:
      - build
          filters:
            branches:
              ignore: /.*/
      - test:
          requires:
            - build
  dbutils-publish:
    jobs:
      - publish:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
