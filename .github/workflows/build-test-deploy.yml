# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    container: node:10.18-jessie
    services:
      postgres:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
            # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Install Postgres CLI
        run: |
          apt-get update -y
          apt-get install -y libpq-dev postgresql-client
      - name: Create, populate & query PostgreSQL
        
        uses: Oxfos/action-postgres-setup@v1
        with:
          POSTGRES_USER: dev
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: dvdrental
        
      - name: Populate dvdrental Database 
        run: psql -d dvdrental -f src/test/sample-db/dvdrental/restore.sql
        env:
          POSTGRES_USER: dev
          POSTGRES_PASSWORD: "1234"
          POSTGRES_DB: dvdrental
      - name: Check out repository code
        uses: actions/checkout@v2
        
      - uses: c-hive/gha-npm-cache@v1

      - name: Install npm dependencies
        run: npm install

          
        
      - name: Run tests with JUnit as reporter
        run: npm run test:ci
        env:
          JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
