# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    container: node:10.18-jessie
    #services:
    #  postgres:
    #    image: postgres:11-alpine
    #    env:
    #      POSTGRES_USER: postgres
    #      POSTGRES_PASSWORD: "postgres"
    #      POSTGRES_DB: dvdrental
    #    options: >-
    #      --health-cmd pg_isready
    #      --health-interval 10s
    #      --health-timeout 5s
    #      --health-retries 5

    steps:
      - name: Install Postgres CLI
        run: |
          apt-get update -y
          apt-get install -y libpq-dev postgresql-client
      - name: Create dvdrental Database
        uses: Daniel-Marynicz/postgresql-action@master
        with:
          postgres_image_tag: 12-alpine
          app_user: dev
          app_user_password: 1234
          app_db: dvdrental
      - name: Populate dvdrental Database 
        run: psql -d dvdrental -f src/test/sample-db/dvdrental/restore.sql -h localhost
        env:
          POSTGRES_USER: dev
          POSTGRES_PASSWORD: "1234"
          POSTGRES_DB: dvdrental
      - name: Check out repository code
        uses: actions/checkout@v2
        
      - uses: c-hive/gha-npm-cache@v1

      - name: Install npm dependencies
        run: npm install

          
        
      - name: Run tests with JUnit as reporter
        run: npm run test:ci
        env:
          JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
